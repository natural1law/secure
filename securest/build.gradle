plugins {
    id 'com.android.library'
    id 'com.github.dcendents.android-maven'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0.2"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            multiDexEnabled true
            zipAlignEnabled true // Zipalign优化
            proguardFiles 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
}

//task makeJar(type: Copy) {
//    delete 'build/securest.jar' //删除之前的旧jar包
//    from('build/intermediates/packaged-classes/debug/default/') //从这个目录下取出默认jar包
//    into('build/') //将jar包输出到指定目录下
//    include('classes.jar')
//    rename('classes.jar', 'securest.jar') //自定义jar包的名字
//}
//makeJar.dependsOn(build)

task clearJar(type: Delete) {
    delete 'build/securest.jar' //jar包的名字，随便命名
}
task makeJar(type: Jar) {
    //指定生成的jar名
    baseName 'securest'
    //从哪里打包class文件
    from('build/intermediates/packaged-classes/debug/default/')
    //打包到jar后的目录结构
    into('build/')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R开头的文件
    exclude{it.name.startsWith('R')}
}
makeJar.dependsOn(clearJar, build)